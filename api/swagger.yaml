---
swagger: "2.0"
info:
  description: "My TT game sequence API feeds the microservice game sequencer which\
    \ is responsible to evaluate which player scored."
  version: "0.9.0"
  title: "My table tennis game sequencer API"
host: "none"
basePath: "/v1"
schemes:
- "https"
- "http"
produces:
- "application/json"
paths:
  /hit:
    post:
      summary: "ball hits anything"
      operationId: "hit"
      parameters:
      - in: "body"
        name: "field"
        description: "hit info"
        required: true
        schema:
          $ref: "#/definitions/tableHitInfo"
      responses:
        200:
          description: "An array of products"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "gameseqctrl"
  /servicePrepare:
    post:
      summary: "Who will serve next"
      operationId: "serviceHit"
      parameters:
      - in: "body"
        name: "side"
        description: "Which side serves the ball (left or right)"
        required: true
        schema:
          $ref: "#/definitions/servicePrepInfo"
      responses:
        200:
          description: "successful"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    x-swagger-router-controller: "gameseqctrl"
definitions:
  tableHitInfo:
    type: "object"
    required:
    - "hitTime"
    - "seqCount"
    - "sourceSensor"
    properties:
      hitSource:
        type: "string"
      leftOrRight:
        type: "string"
      tableField:
        type: "string"
      sourceSensor:
        type: "string"
      seqCount:
        type: "integer"
      hitTime:
        type: "integer"
  servicePrepInfo:
    type: "object"
    required:
    - "tableLeftRightPlayer"
    - "triggerTime"
    properties:
      tableLeftRightPlayer:
        type: "string"
      triggerTime:
        type: "integer"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
